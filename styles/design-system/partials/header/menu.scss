/** Config */
@use "sass:map";
@import "../../config/variables";
@import "../../config/mixins/breakpoints";

$tablet-breakpoint: 1100px;

.menu {

	&_box {
		display: flex;
		align-items: stretch;
		justify-content: flex-start;

		@include breakpoint(max-width, $tablet-breakpoint) {

			li {
				min-height: 54px;
			}
		}

		.sub-menu {

			li {
				border-top: 1px solid var(--aprende--secondary-200);

				@include breakpoint(min-width, $tablet-breakpoint) {

					&:hover {
						background-color: var(--aprende--tertiary-100);
					}
				}

			}

			.menu-item-has-children {

				&::before {
					content: "";
					display: block;
					position: absolute;
					right: 20px;
					top: 19px;
					width: 24px;
					height: 24px;
					margin-top: - map.get($spacing, "2xs");
					background: url(../../images/chevron_right.svg) 50% 50% no-repeat;
					background-size: contain;
					transition: 0.2s;
					z-index: 2;

					@include breakpoint(max-width, $tablet-breakpoint) {
						transform: rotate(0);
					}

					@include breakpoint(min-width, $tablet-breakpoint) {
						right: 16px;
					}
				}

			}

			>a {
				padding-right: 16px;
			}
		}

		ul {
			display: block;
			position: absolute;
			top: 100%;
			left: -15px;
			width: 230px;
			padding: 0;
			margin: 0;
			background-color: $white;
			box-shadow: map.get($elevations, 2);
			transition: 0.3s;
			transform: scale(1, 0);
			transform-origin: 0 0;
			visibility: hidden;
			opacity: 0;
			min-width: 268px;

			@include breakpoint(lg) {
				min-width: 328px;
			}

			li {
				display: block;
				margin-right: 0;
				border-top: 1px solid var(--aprende--secondary-200);

				&::after {
					position: absolute;
					top: -1px;
					bottom: 0;
					left: 0;
					width: 5px;
					transition: 0.2s;
					opacity: 0;
				}


				@include breakpoint(min-width, $tablet-breakpoint) {

					&:hover {

						&::after {
							opacity: 1;
						}

						>ul {
							transform: scale(1, 1);
						}
					}
				}

			}

			ul {
				top: -1px;
				left: 100%;
				transform: scale(0, 1);

				li {

					a {

						@include breakpoint(max-width, $tablet-breakpoint) {
							padding: map.get($spacing, "s") map.get($spacing, "m");
						}

						&:hover {
							text-decoration: underline;
						}
					}
				}
			}

			a {
				text-transform: none;

				@include breakpoint(min-width, $tablet-breakpoint) {
					padding: map.get($spacing, "s") map.get($spacing, "m") map.get($spacing, "s");
				}
			}
		}

		li {
			display: flex;
			position: relative;
			align-items: center;
			justify-content: center;
			transition: 0.2s;


			@include breakpoint(min-width, $tablet-breakpoint) {

				&:hover {

					>ul {
						transform: scale(1, 1);
						visibility: visible;
						opacity: 1;
						border-radius: 0 0 map.get($border-radius, "s") map.get($border-radius, "s");
						box-shadow: map.get($elevations, 2);
					}
				}
			}

			&.active {

				.is {

					&_open {
						display: block;
					}
				}
			}
		}

		a {
			display: block;
			position: relative;
			padding: 0;
			font-family: $font_main;
			font-size: $font-size-m;
			font-weight: $font-regular;
			line-height: $line-height-m;
			text-decoration: none;
			transition: 0.2s;
			z-index: 1;
		}

		.campus {
			border: none;
			display: none;
			padding-top: 15px;

			>a {
				color: var(--aprende--primary);

				@include breakpoint(min-width, $tablet-breakpoint) {
					margin-left: map.get($spacing, "l");
				}

				@extend %btn-lg !optional;
				@extend %btn-primary !optional;
			}
		}

		&#primary-menu {
			margin-right: 0;
			width: 100%;

			li {

				&.item-right {
					margin-left: auto;

					&.open-left {

						a {
							padding-right: map.get($spacing, "xl");
						}
					}
				}

				&.no-collapse {

					@include breakpoint(max-width, $tablet-breakpoint) {
						padding-top: map.get($spacing, "s");

						>a {
							color: var(--aprende--secondary-400);
							font-weight: $font-semi-bold;
						}

						&::before {
							display: none;
						}

						ul {
							display: block;
							background-color: $white;
							margin-left: map.get($spacing, "xl");

							li {
								border: none;
							}
						}
					}
				}
			}

			@include breakpoint(min-width, $tablet-breakpoint) {
				height: 70px;
				gap: map.get($spacing, "xl");
				margin: 0 map.get($spacing, "xl");
			}

			@include breakpoint(max-width, $tablet-breakpoint) {
				left: -20px;
				width: calc(100% + 40px);
				box-shadow: map.get($elevations, 2);
				border-radius: 0 0 map.get($border-radius, "s") map.get($border-radius, "s");
				padding-bottom: map.get($spacing, "2xl");
				overflow: hidden;
				max-height: 70vh;
			}

			>li {

				&.menu-item-has-children {

					&::before {
						content: "";
						display: block;
						position: absolute;
						width: 24px;
						height: 24px;
						margin-top: -5px;
						background-color: var(--aprende--secondary-700);
						-webkit-mask-image: url(../../images/chevron_right.svg);
						mask-image: url(../../images/chevron_right.svg);
						background-size: contain;
						transition: 0.2s;

						@include breakpoint(min-width, $tablet-breakpoint) {
							top: calc(50% - 7px);
							right: 0;
							transform: rotate(90deg);
							z-index: 2;
						}

						@include breakpoint(max-width, $tablet-breakpoint) {
							top: 19px;
							right: 20px;
						}
					}

					@include breakpoint(min-width, $tablet-breakpoint) {

						&.is {

							&_open::before {
								transform: rotate(90deg);
							}
						}
					}

					>a {
						padding-right: 52px;
					}
				}

			}
		}

		@include breakpoint(max-width, $tablet-breakpoint) {
			display: block;
			position: absolute;
			top: 100%;
			left: 0;
			overflow-x: hidden;
			overflow-y: auto;
			width: 240px;
			margin: 0;
			background-color: $white;
			transition: 0.3s;

			ul {
				display: none;
				position: relative;
				top: auto;
				right: auto;
				left: auto;
				width: auto;
				margin: 0;
				box-shadow: none;
				transition: none;
				transform: none;
				visibility: visible;
				opacity: 1;

				ul {
					top: auto;
					left: auto;
					transform: none;
				}

				li {
					border-top-color: var(--aprende--secondary-200);

					&::after {
						display: none;
					}

					&:hover {

						>ul {
							transform: none;
						}
					}
				}

				.sub-menu:hover {

					&::before {
						background-image: url(../../images/ico_arrow_red.svg);
					}

					>a {
						padding-right: 0;
						margin-right: map.get($spacing, "xl");
					}
				}
			}

			li {
				display: block;
				margin: 0;
				border-top: 1px solid var(--aprende--secondary-200);
				text-align: left;

				&.menu-item-has-children {

					&:not(.campus) {

						&.is {

							&_open {
								position: absolute;
								background: var(--aprende--white);
								z-index: 33;
								width: 100%;
								top: 0;
							}
						}
					}

				}

			}

			a {
				padding: map.get($spacing, "m") map.get($spacing, "l");
				line-height: $line-height-m;
				text-transform: none;
			}

			.sub-menu {

				&:hover::before {
					background-image: url(../../images/ico_arrow.svg);
				}

				&.is {

					&_open::before {
						transform: rotate(90deg);
					}
				}

				>a {
					margin-right: map.get($spacing, "xl");
				}
			}

			.submenu {

				&.active {

					&::before {
						transform: rotate(180deg);
						left: 20px;
						right: 0;
						z-index: -1;
					}

					>a {
						opacity: 0;
						z-index: -1;
					}

					.sub-menu {

						&.is {

							&_open {

								.submenu {

									&.active {
										top: -53px;
										max-height: calc(70vh - 60px);
										overflow: auto;
									}
								}

							}
						}
					}
				}
			}

			.campus {
				display: flex;
				position: fixed;
				height: 52px;
				width: 100%;
				background-color: $white;
				bottom: 0;
				border-top: 1px solid var(--aprende--secondary-200);
				padding: 0;
				z-index: 100;
			}
		}
	}
}

.sub-menu {
	display: block;
	transform: scaleY(0);
	transform-origin: 50% 0;
	visibility: hidden;
	opacity: 0;

	@include breakpoint(max-width, $tablet-breakpoint) {

		&.is {

			&_open {
				transform: scaleY(1);
				visibility: visible;
				opacity: 1;
			}
		}
	}
}

.header {

	&.l-new-design-system {

		&_mobile {

			@include breakpoint(min-width, $tablet-breakpoint) {

				display: none;
			}
		}

		&_desktop {

			@include breakpoint(max-width, $tablet-breakpoint) {

				display: none;
			}
		}
	}
}
